== Beaver, chewing through logs to make something useful

Beaver is a light DSL for parsing Rails production logs back into usable data. It answers questions like:

* How many failed logins have there been today? Were they for the same user? From the same IP?
* How many 500, 404, etc. errors yesterday? On what pages?
* How many Widgets were created yesterday, and with what data?
* Did anyone submit a form with the words "kill them all"? Yikes.

Beaver is *not* intended as a replacement for something like Google Analytics, as it is trying to answer some differents kinds of questions.
Rails logs contain some great information, but I've never found a good tool for using them programatically (except for speed analyzers).
Hopefully Beaver can fill that niche for you. Personally I find it quite useful with Logwatch.

Read the full documentation at {jordanhollinger.com/docs/beaver/}[http://jordanhollinger.com/docs/beaver/].
For a full list of matchers available to "hit", see the Beaver::Dam class. For a full list of methods available inside a "hit" block, or to members
of the "hits" array in a "dam" block, see the Beaver::Request class.

== Installation
Beaver is still somewhat experimental, but it has proved stable and robust enough for a non-beta release.

  [sudo] gem install beaver

== Run a DSL file with beaver
Write your beaver DSL file:

  hit :failed_login, :method => :post, :path => '/login', :status => 401

  hit :new_widgets, :path => '/widgets', :method => :post, :status => 302 do
    puts "A Widget named #{params[:widget][:name]} was created!"
  end

  hit :help, :path => %r|^/help| do
    skip! if path == '/help/page_i_want_to_ignore'
    puts "#{ip} looked for help at #{path}"
  end

  hit :server_error, :status => (500..503)

  dam :failed_login do
    puts "Failed logins:"
    hits.group_by { |h| h.params[:username] } do |user, fails|
      puts " #{user}"
      fails.each do |hit|
        puts "  from #{hit.ip} at #{hit.time.to_s}"
      end
    end
  end

  dam :server_errors do
    puts "Server errors:"
    hits.group_by(&:status) do |status, errors|
      puts " There were #{errors.size} #{status} errors"
    end
  end

Run ''beaver'' from the command line, passing in your beaver file and some logs:

  beaver my_beaver_file.rb /var/www/rails-app/log/production.log*

== Use your own Beaver
Use the Beaver DSL in your own code:

  require 'rubygems'
  require 'beaver'

  # Logs from the last day or so
  logs = ['/var/www/rails-app/log/production.log',
          '/var/www/rails-app/log/production.log.1']

  # Parse the logs, but only include requests from yesterday
  Beaver.parse logs, :on => Date.today-1 do
    hit :failed_login, :method => :post, :path => '/login', :status => 401
    ...
  end

== Use beaver like grep for Rails logs

Pretty difficult to grep through a multi-line log format and output each matching multi-line event. But Beaver is up to it:

  beaver --path="/widgets.*" --method=post,put /var/www/rails-app/log/production.log

Or format the output to a single line:

  beaver --path="/widgets.*" --method=post,put /var/www/rails-app/log/production.log --print "%{ip} hit %{path} using %{method}"

The command-line matchers are nearly identical to the DSL's. See more details with 'beaver --help'.

== Example use with Logwatch
This assumes 1) you're rotating your Rails logs daily and 2) you're running logwatch daily.

Check your beaver DSL file into your Rails app, maybe under /script.

Add a logwatch config file for your new service at /etc/logwatch/conf/services/your_app.conf:

  Title = "Your Rails App"
  LogFile = NONE

In /etc/logwatch/scripts/services/your_app:

  beaver /var/www/your_app/script/beaver.rb --yesterday /var/www/your_app/log/production.log{,.1}

== Your Rails app should return appropriate HTTP statuses
Rails does a lot of great things for us, but one thing largely up to us are
HTTP status codes. For example, your failed logins are probably returning
200 when they should arguably be returning 400 or 401.

  render :action => :login, :status => 401

See, it's easy. And very useful to Beaver.

== TODO
* Add support for Apache/Nginx/Rack::CommonLogger

== License
Copyright 2011 Jordan Hollinger

Licensed under the Apache License
